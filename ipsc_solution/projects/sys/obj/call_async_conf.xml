<?xml version="1.0" encoding="utf-8"?>
<root>
  <FlowItem>
    <FlowID>call_async_conf</FlowID>
    <FlowName>call_async_conf</FlowName>
    <FlowDesc />
    <FlowVer>1.0</FlowVer>
    <CreateDate>2016-06-27T10:19:05+08:00</CreateDate>
    <ModifyDate>2016-11-19T05:34:17+08:00</ModifyDate>
    <DesignVer>2.0</DesignVer>
  </FlowItem>
  <FlowNode>
    <NodeID>1862</NodeID>
    <NodeType>SUBSTART</NodeType>
    <NodeName>子流程开始</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <AffectList>
        <varlist>
          <var>sender</var>
        </varlist>
        <varlist>
          <var>id_</var>
        </varlist>
        <varlist>
          <var>res_id</var>
        </varlist>
        <varlist>
          <var>params</var>
        </varlist>
      </AffectList>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1863</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1863</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=try:

	error = None

	last_err = None

	call_map = _gd_['call_map'] # chan =&gt; call_info
	conf_map = _gd_['conf_map'] # res_id =&gt; call_info

	call_map_r = _gd_['call_map_r'] # res_id =&gt; call_info
	conf_map_r = _gd_['conf_map_r'] # res_id -&gt; conf_info

	#
	call_info = call_map_r[res_id]
	chan = call_info['chan']

	#
	begin_time = now()

	#
	conf_res_id = params['conf_res_id']
	conf_info = conf_map_r[conf_res_id]
	conf_id = conf_info['conf_id']

	voice_mode = int(params.get('voice_mode', 1))
	if voice_mode not in (1,2,3,4):
		raise IvrError(0, 'params voice_mode not in (1,2,3,4)')
	

	#######################################
	# dial opts
	#######################################
	opts_dict = {}
	opts = ''
	
	opts_dict['voice_mode'] = voice_mode

	for k, v in opts_dict.items():
		if opts:
			opts = opts + ';'
		opts = opts + '{}={}'.format(k,v)
	Trace('opts=%s' % opts)

except Exception as err:
	error = str(err)
	raise
</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1883</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1866</NodeID>
    <NodeType>AFTERPROC</NodeType>
    <NodeName>后处理</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1869</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1868</NodeID>
    <NodeType>SUBEND</NodeType>
    <NodeName>子流程结束</NodeName>
    <ExtendedProperty>IsHangup=1</ExtendedProperty>
    <PropertySet>
      <EffectList />
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1869</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本 call on conf completed</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=call_info['async_work_ch'] = None
#call_info['state'] = 'Idle'
params = {
		'res_id': res_id,
		'error': error,
		'conf_res_id': conf_res_id,
		'begin_time': begin_time,
		'end_time': now(),
		'user_data': call_info['params'].get('user_data'),
	}
jsonrpc.send_event(
	method='call.on_conf_completed',
	params=params
)

</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>1868</target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1868</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1874</NodeID>
    <NodeType>LET</NodeType>
    <NodeName>赋值 error</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <letlist>
        <let>
          <VarName>error</VarName>
          <ZoneType>0</ZoneType>
          <Value>"join conf error"</Value>
        </let>
      </letlist>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1876</NodeID>
    <NodeType>LET</NodeType>
    <NodeName>赋值 error</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <letlist>
        <let>
          <VarName>error</VarName>
          <ZoneType>0</ZoneType>
          <Value>"hungup when join conf"</Value>
        </let>
      </letlist>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1881</NodeID>
    <NodeType>LET</NodeType>
    <NodeName>赋值 error</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <letlist>
        <let>
          <VarName>error</VarName>
          <ZoneType>0</ZoneType>
          <Value>"conf timeout"</Value>
        </let>
      </letlist>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1883</NodeID>
    <NodeType>JOINCONFEX</NodeType>
    <NodeName>加入会议组</NodeName>
    <ExtendedProperty>ConfID=conf_id;InitVolume=int(params.get('volume', 0));WaitMode=0;MainCh=chan;MainJoinMode=1;MainTimeOut=int(params['max_seconds']);AddChList=;JoinModeList=;TalkChList=;ChTimeOutList=;AddPlay=params.get('play_file') or '';IsClampTone=0;Option=opts;OutExitData=;MainPmCh=</ExtendedProperty>
    <PropertySet>
      <Actions />
      <Exit>
        <ExitPort>
          <type>5</type>
          <targetflow>
          </targetflow>
          <target>1876</target>
        </ExitPort>
        <ExitPort>
          <type>4</type>
          <targetflow>
          </targetflow>
          <target>1881</target>
        </ExitPort>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>1874</target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>8</type>
          <targetflow>
          </targetflow>
          <target>1884</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1884</NodeID>
    <NodeType>LET</NodeType>
    <NodeName>赋值 error</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <letlist>
        <let>
          <VarName>error</VarName>
          <ZoneType>0</ZoneType>
          <Value>"kicked from conf"</Value>
        </let>
      </letlist>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
</root>