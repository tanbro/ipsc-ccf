<?xml version="1.0" encoding="utf-8"?>
<root>
  <FlowItem>
    <FlowID>request</FlowID>
    <FlowName>request</FlowName>
    <FlowDesc />
    <FlowVer>1.0</FlowVer>
    <CreateDate>2016-06-03T18:04:14+08:00</CreateDate>
    <ModifyDate>2016-06-08T02:19:25+08:00</ModifyDate>
    <DesignVer>2.0</DesignVer>
  </FlowItem>
  <FlowNode>
    <NodeID>1021</NodeID>
    <NodeType>SUBSTART</NodeType>
    <NodeName>子流程开始</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <AffectList>
        <varlist>
          <var>id_</var>
        </varlist>
        <varlist>
          <var>method</var>
        </varlist>
        <varlist>
          <var>params</var>
        </varlist>
      </AffectList>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1074</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1023</NodeID>
    <NodeType>JUDGE</NodeType>
    <NodeName>判断 init method</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <switch>
        <case>
          <expression>method == "ivr.call.perform"</expression>
          <ExitType>101</ExitType>
        </case>
      </switch>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>101</type>
          <targetflow>
          </targetflow>
          <target>1076</target>
        </ExitPort>
        <ExitPort>
          <type>100</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1074</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本 subflow init</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=cid_map = _gd_['cid_map']
cid_rmap = _gd_['cid_rmap']

delay_msec = 120 * 1000
last_err = None
</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1023</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1076</NodeID>
    <NodeType>DIALEX</NodeType>
    <NodeName>拨号</NodeName>
    <ExtendedProperty>WorkCh=;Dnis=params['to_uri'];Ani=params['from_uri'];OrDnis=;AgConnDelay=6;IsConnCh=1;RingVoice=;RingTimeout=50;IsStopPlay=1;IsCheckDialTone=0;OutChNo=chan;OutDnis=;LinkNo=;PlayType=;CallDevGroup=;CallDev=;InteractiveMode=0;CallDevType=2;DtmfTime=10;Option=;WorkDev2=0;OutSessionID=;OutConnCh=;EndMode=1;IsM3G=0</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>6</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>4</type>
          <targetflow>
          </targetflow>
          <target>1079</target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1078</target>
        </ExitPort>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>1079</target>
        </ExitPort>
        <ExitPort>
          <type>5</type>
          <targetflow>
          </targetflow>
          <target>1079</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1078</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本::call.perform initiated</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=last_err = None
try:
	cid = uuid()
	cid_map[cid] = call_info = {
		'id': id_,
		'cid': cid,
		'params': params,
		'chan': chan,
		'begin_time': now(),
		'answer_time': None,
		'end_time': None,
		'dropped_by': 'usr',
		'reason': None,
		'cause': None,
	}
	cid_rmap[chan] = cid
	jsonrpc.send_result(id_, cid)
except IvrError as err:
	TraceErr(err)
	last_err = err
</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1109</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1079</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本::call.perform error</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=last_err = None
try:
	cid_map.pop(cid, None)
	cid_rmap.pop(chan, None)
	jsonrpc.send_error(id_)
except IvrError as err:
	TraceErr(err)
	last_err = err</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1089</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本 call.on_answer</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=last_err = None
try:
	call_info['answer_time'] = now()
	jsonrpc.send_method(
		method='ivr.call.on_answered',
		params={
			'cid': cid,
		}
	)
except IvrError as err:
	TraceErr(err)
	last_err = err</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1142</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1109</NodeID>
    <NodeType>JUDGE</NodeType>
    <NodeName>判断 not last_err</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <switch>
        <case>
          <expression>not bool(last_err)</expression>
          <ExitType>101</ExitType>
        </case>
      </switch>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>101</type>
          <targetflow>
          </targetflow>
          <target>1164</target>
        </ExitPort>
        <ExitPort>
          <type>100</type>
          <targetflow>
          </targetflow>
          <target>1079</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1122</NodeID>
    <NodeType>JUDGE</NodeType>
    <NodeName>判断 method</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <switch>
        <case>
          <expression>method == 'ivr.call.start_play'</expression>
          <ExitType>101</ExitType>
        </case>
      </switch>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>101</type>
          <targetflow>
          </targetflow>
          <target>1175</target>
        </ExitPort>
        <ExitPort>
          <type>100</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1164</NodeID>
    <NodeType>WAITDIALEX</NodeType>
    <NodeName>等待拨号</NodeName>
    <ExtendedProperty>OutConnCh=;OutDnis=;Timeout=;WorkCh=chan;Option=</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>6</type>
          <targetflow>
          </targetflow>
          <target>1129</target>
        </ExitPort>
        <ExitPort>
          <type>4</type>
          <targetflow>
          </targetflow>
          <target>1166</target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1089</target>
        </ExitPort>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>1129</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1166</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本 dropped_by</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=call_info['dropped_by'] = 'sys'</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1129</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1129</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本 call.on_finished</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=last_err = None
try:
	cid_map.pop(cid, None)
	cid_rmap.pop(chan, None)

	call_info['end_time'] = now()
	call_info['reason'], call_info['cause'] = GetCallFailReasonAndCause(chan)

	if call_info['answer_time']:
		answered_duration = call_info['end_time'] - call_info['answer_time']
	else:
		answered_duration = None

	jsonrpc.send_method(
		method='ivr.call.on_finished',
		params={
			'cid': call_info['cid'],
			'dropped_by': call_info['dropped_by'],
			'cause': call_info['cause'],
			'answered_duration': answered_duration,
		}
	)
except IvrError as err:
	TraceErr(err)
	last_err = err</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1139</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本 parse data</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=id_, method, params = json.loads(data)</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1122</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1142</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本 Delay</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=ret_val = AsynchInvoke(Delay(delay_msec, True, chan, -1, "BusNotifyTitle=%s" % (cid)))
err, data = ret_val
if err != 1:
    TraceErr('Delay error: %s' % err)
</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>1129</target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1143</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1143</NodeID>
    <NodeType>JUDGE</NodeType>
    <NodeName>判断 Delay returns</NodeName>
    <ExtendedProperty>
    </ExtendedProperty>
    <PropertySet>
      <switch>
        <case>
          <expression>err == 1</expression>
          <ExitType>101</ExitType>
        </case>
      </switch>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>101</type>
          <targetflow>
          </targetflow>
          <target>1139</target>
        </ExitPort>
        <ExitPort>
          <type>100</type>
          <targetflow>
          </targetflow>
          <target>1129</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1163</NodeID>
    <NodeType>PLAY</NodeType>
    <NodeName>放音</NodeName>
    <ExtendedProperty>PrePromptVoice=;ChNo=chan;BreakDtmfStr=;Mode=0;OutKey=;VideoFile=;VideoFormat=0;PlayVideoVoice=0;PlayEndMode=0;IsHaveLogo=0;LogoFile=;LogoPosLeft=0;LogoPosTop=0;LogoWidth=0;LogoHeight=0;LogoTransYUVA=255:255:255:0;LogoAlphaBlending=0</ExtendedProperty>
    <PropertySet>
      <DynamicVoice>
        <VarVoice>
          <content>params['file_path']</content>
          <type>0</type>
          <option>
          </option>
        </VarVoice>
      </DynamicVoice>
      <SubTitle />
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>1129</target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1142</target>
        </ExitPort>
        <ExitPort>
          <type>5</type>
          <targetflow>
          </targetflow>
          <target>1129</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
  <FlowNode>
    <NodeID>1175</NodeID>
    <NodeType>SCRIPT</NodeType>
    <NodeName>脚本 call.start_play return</NodeName>
    <ExtendedProperty>ZoneType=0;ScriptContent=last_err = None
try:
	jsonrpc.send_result(id_)
except IvrError as err:
	TraceErr(err)
	last_err = err
</ExtendedProperty>
    <PropertySet>
      <Exit>
        <ExitPort>
          <type>2</type>
          <targetflow>
          </targetflow>
          <target>
          </target>
        </ExitPort>
        <ExitPort>
          <type>1</type>
          <targetflow>
          </targetflow>
          <target>1163</target>
        </ExitPort>
      </Exit>
    </PropertySet>
  </FlowNode>
</root>